{
	"name": "getAllValues",
	"category": "Devices",
	"shortDescription": "Returns all peer configuration parameters and some additional metadata",
	"description": "This method returns all variable values and information about all variables for one or all peers. Configuration parameters are not returned. To get all configuration parameters, call <a href=\"#getAllConfig\">getAllConfig</a>.",
	"signatures": [
		"Struct getAllValues()",
		"Struct getAllValues(Boolean returnWriteOnlyVariables)",
		"Struct getAllValues(Integer peerId)",
		"Struct getAllValues(Integer peerId, Boolean returnWriteOnlyVariables)"
	],
	"parameters": [{
		"name": "peerId",
		"type": "Integer",
		"description": "When specified, only variables of this peer are returned.",
		"exampleValue": "12",
		"default": "void"
	}, {
		"name": "returnWriteOnlyVariables",
		"type": "Boolean",
		"description": "When specifed, writeOnly variables are also returned.",
		"exampleValue": "true",
		"default": "false"
	}],
	"returnValue": "This returns an array of structs, and one struct is returned for each device. The struct has the following elements:<ul><li><b>ADDRESS:</b> The serial number of the device (e. g. JEQ0471872)</li><li><b>ID:</b> The ID of the device (e. g. 12)</li><li><b>FAMILIY:</b> The ID of the device family (e. g. 0 for HomeMatic BidCoS)</li><li><b>TYPE:</b> The type string of the device (e. g. HMW-LC-Dim1L-DR)</li><li><b>TYPE_ID:</b> The type ID of the device (e. g. 25)</li><li><b>NAME:</b> The user-defined name of the device (e. g. \"Living room - light\")</li><li><b>CHANNELS:</b> An array with one element for each channel of the device, where each element is a struct with the following items:<ul><li><b>INDEX:</b> The channel index</li><li><b>TYPE:</b> The channel type (e. g. KEY)</li><li><b>PARAMSET:</b> A struct with one element for each variable, and the name of each item is the name of the variable. The variable struct has the following elements:<ul><li><b>VALUE:</b> The value of the variable</li><li><b>READABLE:</b> \"true\" if the variable is readable (there are writeonly variables)</li><li><b>WRITEABLE:</b> \"true\" if the variable is writeable</li><li><b>TYPE:</b> The variable type (BOOL, ACTION, INTEGER, ENUM, STRING, FLOAT)</li><li><b>MIN:</b> The minimum possible numeric value (only for INTEGER, ENUM, or FLOAT)</li><li><b>MAX:</b> The maximum possible numeric value (only for INTEGER, ENUM, or FLOAT)</li><li><b>VALUE_LIST:</b> This is an array with string descriptions of all possible values and is only for ENUM.</li><li><b>SPECIAL:</b> This is an array of structs and is only for INTEGER or FLOAT. Each struct has two elements:<ul><li><b>ID:</b> A string description of the special value</li><li><b>VALUE:</b> The special value</li></ul></li></ul></li></ul></li></ul>",
	"errors": [{
		"code": -2,
		"description": "Peer is unknown."
	}],
	"exampleOutput": [{
		"call": "getAllValues()",
		"output": "KEFycmF5IGxlbmd0aD0yMCkNCnsNCiAgKFN0cnVjdCBsZW5ndGg9NykNCiAgew0KICAgIFtBRERSRVNTXQ0KICAgIHsNCiAgICAgIChTdHJpbmcpIExFUTEzMjM1NTUNCiAgICB9DQogICAgW0NIQU5ORUxTXQ0KICAgIHsNCiAgICAgIChBcnJheSBsZW5ndGg9MTEpDQogICAgICB7DQogICAgICAgIChTdHJ1Y3QgbGVuZ3RoPTMpDQogICAgICAgIHsNCiAgICAgICAgICBbSU5ERVhdDQogICAgICAgICAgew0KICAgICAgICAgICAgKEludGVnZXIpIDANCiAgICAgICAgICB9DQogICAgICAgICAgW1BBUkFNU0VUXQ0KICAgICAgICAgIHsNCiAgICAgICAgICAgIChTdHJ1Y3QgbGVuZ3RoPTkpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgIFtDRU5UUkFMX0FERFJFU1NfU1BPT0ZFRF0NCiAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIChTdHJ1Y3QgbGVuZ3RoPTYpDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgW01BWF0NCiAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgKEludGVnZXIpIDENCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgIFtNSU5dDQogICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIChJbnRlZ2VyKSAwDQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICBbVFlQRV0NCiAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgKFN0cmluZykgRU5VTQ0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgW1ZBTFVFXQ0KICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAoSW50ZWdlcikgMA0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgW1ZBTFVFX0xJU1RdDQogICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIChBcnJheSBsZW5ndGg9MikNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgIChTdHJpbmcpIFVOU0VUDQogICAgICAgICAgICAgICAgICAgICAgKFN0cmluZykgQ0VOVFJBTF9BRERSRVNTX1NQT09GRUQNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgW1dSSVRFQUJMRV0NCiAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgKEJvb2xlYW4pIDENCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgLg0KICAgICAgICAgICAgICAuDQogICAgICAgICAgICAgIC4NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgICAgW1RZUEVdDQogICAgICAgICAgew0KICAgICAgICAgICAgKFN0cmluZykgTUFJTlRFTkFOQ0UNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgKFN0cnVjdCBsZW5ndGg9MykNCiAgICAgICAgew0KICAgICAgICAgIFtJTkRFWF0NCiAgICAgICAgICB7DQogICAgICAgICAgICAoSW50ZWdlcikgMQ0KICAgICAgICAgIH0NCiAgICAgICAgICBbUEFSQU1TRVRdDQogICAgICAgICAgew0KICAgICAgICAgICAgKFN0cnVjdCBsZW5ndGg9NSkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgW0lOU1RBTExfVEVTVF0NCiAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIChTdHJ1Y3QgbGVuZ3RoPTMpDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgW1RZUEVdDQogICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIChTdHJpbmcpIEFDVElPTg0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgW1ZBTFVFXQ0KICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAoQm9vbGVhbikgMA0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgW1dSSVRFQUJMRV0NCiAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgKEJvb2xlYW4pIDANCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgLg0KICAgICAgICAgICAgICAuDQogICAgICAgICAgICAgIC4NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgICAgW1RZUEVdDQogICAgICAgICAgew0KICAgICAgICAgICAgKFN0cmluZykgS0VZDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KICAgIFtGQU1JTFldDQogICAgew0KICAgICAgKEludGVnZXIpIDANCiAgICB9DQogICAgW0lEXQ0KICAgIHsNCiAgICAgIChJbnRlZ2VyKSAzMw0KICAgIH0NCiAgICBbTkFNRV0NCiAgICB7DQogICAgICAoU3RyaW5nKSANCiAgICB9DQogICAgW1RZUEVdDQogICAgew0KICAgICAgKFN0cmluZykgSE0tRGlzLVdNNTUNCiAgICB9DQogICAgW1RZUEVfSURdDQogICAgew0KICAgICAgKEludGVnZXIpIDIxMQ0KICAgIH0NCiAgfQ0KICAoU3RydWN0IGxlbmd0aD03KQ0KICB7DQogICAgW0FERFJFU1NdDQogICAgew0KICAgICAgKFN0cmluZykgTEVRMTE3MzUwNQ0KICAgIH0NCiAgICBbQ0hBTk5FTFNdDQogICAgew0KICAgICAgLg0KICAgICAgLg0KICAgICAgLg0KICAgIH0NCiAgICBbRkFNSUxZXQ0KICAgIHsNCiAgICAgIChJbnRlZ2VyKSAwDQogICAgfQ0KICAgIFtJRF0NCiAgICB7DQogICAgICAoSW50ZWdlcikgNDINCiAgICB9DQogICAgW05BTUVdDQogICAgew0KICAgICAgKFN0cmluZykgDQogICAgfQ0KICAgIFtUWVBFXQ0KICAgIHsNCiAgICAgIChTdHJpbmcpIEhNLVNlYy1TQ28NCiAgICB9DQogICAgW1RZUEVfSURdDQogICAgew0KICAgICAgKEludGVnZXIpIDE5OQ0KICAgIH0NCiAgfQ0KfQ0K"
	}]
}
