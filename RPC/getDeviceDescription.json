{
	"name": "getDeviceDescription",
	"category": "Devices",
	"shortDescription": "Returns static information about a device",
	"description": "This method returns the a struct of type <em><a href=\"#deviceDescription\">DeviceDescription</a></em> of the specified device or channel.",
	"signatures": [
		"DeviceDescription getDeviceDescription(Integer peerId, Integer channel)",
		"DeviceDescription getDeviceDescription(Integer peerId, Integer channel, Array&lt;String&gt; fields)"
	],
	"deprecatedSignatures": [
		"DeviceDescription getDeviceDescription(String address)",
		"DeviceDescription getDeviceDescription(String address, Array&lt;String&gt; fields)"
	],
	"parameters": [{
		"name": "peerId",
		"type": "Integer",
		"description": "The ID of the peer to return the device description for.",
		"exampleValue": "12"
	}, {
		"name": "channel",
		"type": "Integer",
		"description": "The channel of the peer to return the device description for.",
		"exampleValue": "1"
	}, {
		"name": "address",
		"type": "String",
		"description": "The serialnumber and channel of the device seperated by colon.",
		"exampleValue": "JEQ0578372:1"
	}, {
		"name": "fields",
		"type": "Array<String>",
		"description": "When fields is not empty, only the struct elements defined in the array (e. g. <em>ID</em> or <em>TYPE</em>) are returned. This saves ressources. Some elements like <em>DESCRIPTION</em> or <em>LONG_DESCRIPTION</em> are only returned when explicitly requested through this variable.",
		"exampleValue": "[ \"ID\", \"TYPE\" ]"
	}],
	"returnValue": "Returns a struct of type <em><a href=\"#deviceDescription\">DeviceDescription</a></em>",
	"errors": [{
		"code": -2,
		"description": "Peer or channel is unknown."
	}],
	"exampleOutput": [{
		"call": "getDeviceDescription(89, 0)",
		"output": "KFN0cnVjdCBsZW5ndGg9MTUpCnsKICBbQUREUkVTU10KICB7CiAgICAoU3RyaW5nKSBJVEQwMDAwMDEyRjowCiAgfQogIFtBRVNfQUNUSVZFXQogIHsKICAgIChJbnRlZ2VyKSAwCiAgfQogIFtDQVRFR09SSUVTXQogIHsKICAgIChBcnJheSBsZW5ndGg9MikKICAgIHsKICAgICAgKEludGVnZXIpIDUKICAgICAgKEludGVnZXIpIDcKICAgIH0KICB9CiAgW0NIQU5ORUxdCiAgewogICAgKEludGVnZXIpIDAKICB9CiAgW0RJUkVDVElPTl0KICB7CiAgICAoSW50ZWdlcikgMAogIH0KICBbRkFNSUxZXQogIHsKICAgIChJbnRlZ2VyKSAxNgogIH0KICBbRkxBR1NdCiAgewogICAgKEludGVnZXIpIDMKICB9CiAgW0lEXQogIHsKICAgIChJbnRlZ2VyKSAzCiAgfQogIFtJTkRFWF0KICB7CiAgICAoSW50ZWdlcikgMAogIH0KICBbTElOS19TT1VSQ0VfUk9MRVNdCiAgewogICAgKFN0cmluZykgCiAgfQogIFtMSU5LX1RBUkdFVF9ST0xFU10KICB7CiAgICAoU3RyaW5nKSAKICB9CiAgW1BBUkFNU0VUU10KICB7CiAgICAoQXJyYXkgbGVuZ3RoPTIpCiAgICB7CiAgICAgIChTdHJpbmcpIE1BU1RFUgogICAgICAoU3RyaW5nKSBWQUxVRVMKICAgIH0KICB9CiAgW1BBUkVOVF0KICB7CiAgICAoU3RyaW5nKSBJVEQwMDAwMDEyRgogIH0KICBbUEFSRU5UX1RZUEVdCiAgewogICAgKFN0cmluZykgSVQtU3dpdGNoCiAgfQogIFtST09NXQogIHsKICAgIChJbnRlZ2VyKSAyCiAgfQogIFtUWVBFXQogIHsKICAgIChTdHJpbmcpIE1BSU5URU5BTkNFCiAgfQogIFtWRVJTSU9OXQogIHsKICAgIChJbnRlZ2VyKSAxCiAgfQp9"
	}]
}
